From 6f8b3481cf511ade803fe7a2ea8fe3b99fce3658 Mon Sep 17 00:00:00 2001
From: Jens Axboe <axboe@kernel.dk>
Date: Tue, 3 Sep 2024 07:48:14 -0600
Subject: [PATCH] Don't set _GNU_SOURCE in pkg-config cflags
Origin: upstream, commit:6f8b3481cf511ade803fe7a2ea8fe3b99fce3658
Forwarded: not-needed

Applications should set this themselves as needed, not be exposed to
it by default.

Guard the loff_t and cpu_set_t usage by _GNU_SOURCE, and make a mention
of it in the man page.

Link: https://github.com/axboe/liburing/issues/1218
Fixes: 9485c21f8f36 ("liburing.pc.in: add -D_GNU_SOuRCE to Cflags")
Signed-off-by: Jens Axboe <axboe@kernel.dk>
---
 liburing.pc.in                   | 2 +-
 man/io_uring_prep_ftruncate.3    | 6 ++++++
 man/io_uring_register_iowq_aff.3 | 6 ++++++
 src/include/liburing.h           | 4 ++++
 4 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/liburing.pc.in b/liburing.pc.in
index 790c22e..2c879b2 100644
--- a/liburing.pc.in
+++ b/liburing.pc.in
@@ -9,4 +9,4 @@ Description: io_uring library
 URL: https://git.kernel.dk/cgit/liburing/
 
 Libs: -L${libdir} -luring
-Cflags: -I${includedir} -D_GNU_SOURCE
+Cflags: -I${includedir}
diff --git a/man/io_uring_prep_ftruncate.3 b/man/io_uring_prep_ftruncate.3
index c49ad5b..e3f1f7e 100644
--- a/man/io_uring_prep_ftruncate.3
+++ b/man/io_uring_prep_ftruncate.3
@@ -25,6 +25,12 @@ that should get truncated to the length indicated by the
 .I len
 argument.
 
+Applications must define
+.B _GNU_SOURCE
+to obtain the definition of this helper, as
+.I loff_t
+will not be defined without it.
+
 .SH RETURN VALUE
 None
 .SH ERRORS
diff --git a/man/io_uring_register_iowq_aff.3 b/man/io_uring_register_iowq_aff.3
index e782914..686222c 100644
--- a/man/io_uring_register_iowq_aff.3
+++ b/man/io_uring_register_iowq_aff.3
@@ -38,6 +38,12 @@ For unregistration,
 .BR io_uring_unregister_iowq_aff (3)
 may be called to restore CPU affinities to the default.
 
+Applications must define
+.B _GNU_SOURCE
+to obtain the definition of this helper, as
+.I cpu_set_t
+will not be defined without it.
+
 .SH RETURN VALUE
 Returns
 .B 0
diff --git a/src/include/liburing.h b/src/include/liburing.h
index 055a461..0dc445d 100644
--- a/src/include/liburing.h
+++ b/src/include/liburing.h
@@ -232,8 +232,10 @@ int io_uring_register_restrictions(struct io_uring *ring,
 				   unsigned int nr_res);
 int io_uring_enable_rings(struct io_uring *ring);
 int __io_uring_sqring_wait(struct io_uring *ring);
+#ifdef _GNU_SOURCE
 int io_uring_register_iowq_aff(struct io_uring *ring, size_t cpusz,
 				const cpu_set_t *mask);
+#endif
 int io_uring_unregister_iowq_aff(struct io_uring *ring);
 int io_uring_register_iowq_max_workers(struct io_uring *ring,
 				       unsigned int *values);
@@ -1259,11 +1261,13 @@ IOURINGINLINE void io_uring_prep_fixed_fd_install(struct io_uring_sqe *sqe,
 	sqe->install_fd_flags = flags;
 }
 
+#ifdef _GNU_SOURCE
 IOURINGINLINE void io_uring_prep_ftruncate(struct io_uring_sqe *sqe,
 				       int fd, loff_t len)
 {
 	io_uring_prep_rw(IORING_OP_FTRUNCATE, sqe, fd, 0, 0, len);
 }
+#endif
 
 /*
  * Returns number of unconsumed (if SQPOLL) or unsubmitted entries exist in
-- 
2.45.2

